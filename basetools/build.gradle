apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
//apply plugin: 'com.jakewharton.hugo'
//apply plugin: 'android-aspectjx'
//getDataFromGradle("SOURCE_DEPENDECY")
if (!getDataFromGradle("SOURCE_DEPENDECY").toBoolean()) {
    apply from: file('../uploade.gradle')
}


android {
    compileSdkVersion 28
    buildToolsVersion '28.0.2'


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java.srcDirs += "src/main/kotlin"
        }
    }

    lintOptions {
        abortOnError false
    }

    kapt {
        generateStubs = true//将第三方库先生成class在用kotlin注解(glide)
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation("org.aspectj:aspectjrt:1.8.9")
    implementation 'androidx.appcompat:appcompat:1.0.0-rc02'
//    implementation 'com.android.support:appcompat-v7:28.0.0-rc02'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.2.61'
    implementation "org.jetbrains.anko:anko:$anko_version"
    api 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'
    implementation 'jp.wasabeef:glide-transformations:3.3.0'
    // If you want to use the GPU Filters
    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    implementation 'androidx.recyclerview:recyclerview:1.0.0-rc02'
}


def getDataFromGradle(String name) {
    Properties properties = new Properties()
    def file = file("local.properties")
    file.withInputStream { stream ->
        properties.load(stream)
    }
    def value = properties.getProperty(name)
    value
}

//repositories {
//    mavenCentral()
//}

